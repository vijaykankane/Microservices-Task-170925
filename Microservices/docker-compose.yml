version: '3.8'

services:
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: microservices-user-service
    ports:
      - "3000:3000"
    networks:
      - microservices-network
    environment:
      - NODE_ENV=production
      - SERVICE_NAME=user-service
      - SERVICE_PORT=3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  product-service:
    build:

      context: ./product-service
      dockerfile: Dockerfile
    container_name: microservices-product-service
    ports:
      - "3001:3001"
    networks:
      - microservices-network
    environment:
      - NODE_ENV=production
      - SERVICE_NAME=product-service
      - SERVICE_PORT=3001
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    container_name: microservices-gateway-service
    ports:
      - "3003:3003"
    networks:
      - microservices-network
    environment:
      - NODE_ENV=production
      - SERVICE_NAME=gateway-service
      - SERVICE_PORT=3003
      - USER_SERVICE_URL=http://user-service:3000
      - PRODUCT_SERVICE_URL=http://product-service:3001
    restart: unless-stopped
    depends_on:
      user-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

networks:
  microservices-network:
    driver: bridge
    name: microservices-network
    ipam:
      config:
        - subnet: 172.20.0.0/16